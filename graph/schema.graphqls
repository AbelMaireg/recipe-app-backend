type User {
  id: ID!
  username: String!
}

input SignUpInput {
  username: String!
  password: String!
}

input SignInInput {
  username: String!
  password: String!
}

type SignInResponse {
  token: String!
  user: User!
}

type Query {
  me: User!
  files: [File!]!
  file(id: ID!): File
}

type Mutation {
  signUp(input: SignUpInput!): User!
  signIn(input: SignInInput!): SignInResponse!
  uploadFile(file: Upload!): File!
  deleteFile(id: ID!): Boolean!
}

scalar Upload

type File {
  id: ID!
  filename: String!
  mimetype: String!
  url: String!
  createdAt: String!
  uploadedBy: User!
}
